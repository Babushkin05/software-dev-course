version: '3.8'

services:
  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  # Orders PostgreSQL
  orders-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders
    volumes:
      - orders-data:/var/lib/postgresql/data
    networks:
      - backend

  # Payments PostgreSQL
  payments-db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payments
    volumes:
      - payments-data:/var/lib/postgresql/data
    networks:
      - backend

  # Orders service
  orders-service:
    build:
      context: ./orders-service
      dockerfile: deployments/Dockerfile
    depends_on:
      - orders-db
      - kafka
    environment:
      DB_HOST: order-postgres
      DB_PORT: 5433
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: orders
      KAFKA_BROKER: kafka:9092
    networks:
      - backend

  # Payments service
  payments-service:
    build:
      context: ./payments-service
      dockerfile: deployments/Dockerfile
    depends_on:
      - payments-db
      - kafka
    environment:
      DB_HOST: payments-postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: payments
      KAFKA_BROKER: kafka:9092
    networks:
      - backend

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: deployments/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - orders-service
      - payments-service
    environment:
      HTTP_PORT: 8080
      ORDERS_SERVICE_ADDR: orders-service:50051
      PAYMENTS_SERVICE_ADDR: payments-service:50052
    networks:
      - backend

volumes:
  orders-data:
  payments-data:

networks:
  backend:
    driver: bridge
