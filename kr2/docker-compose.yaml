version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: storing-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  storing-service:
    build:
      context: ./storing-service
      dockerfile: deployments/Dockerfile
    container_name: storing-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "50051:50051"
    env_file:
      - .env
    command: ["./storing-service", "--config=config/local.yaml"]

  analise-service:
    build:
      context: ./analise-service
      dockerfile: deployments/Dockerfile
    container_name: analise-service
    depends_on:
      storing-service:
        condition: service_started
    ports:
      - "50052:50052"
    command: ["./analise-service", "--config=config/local.yaml"]

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: deployments/Dockerfile
    container_name: api-gateway
    depends_on:
      storing-service:
        condition: service_started
      analise-service:
        condition: service_started
    ports:
      - "8080:8080"
    command: ["./api-gateway", "--config=config/local.yaml"]

volumes:
  pgdata:
